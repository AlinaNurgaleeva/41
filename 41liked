public class P41 {

    public static void main(String[] args) {

        boolean wasFound = false;

        for (int nr = 7654321; nr >= 1234567; nr -= 2) { // even != prime
            if (isPandigital(nr) && isOddPrime(nr)) {
                System.out.println(nr);
                wasFound = true;
                break;
            }
        }

        if (!wasFound) {
            /* not <=, because 1234 is even */
            for (int nr = 4321; nr > 1234; nr -= 2) {
                if (isPandigital(nr) && isOddPrime(nr)) {
                    System.out.println(nr);
                    break;
                }
            }
        }
    }

    private static boolean isOddPrime(int x) {
        int sqrt = (int) Math.sqrt(x);
        for (int i = 3; i <= sqrt; i += 2) {
            if (x % i == 0) {
                return false;
            }
        }
        return true;
    }

    private static int getNumberOfDigits(int x) {
        int count = 0;
        while (x > 0) {
            count++;
            x /= 10;
        }
        return count;
    }

    private static boolean isPandigital(int x) {
        int numberOfDigits = getNumberOfDigits(x);
        Set<Integer> digits = new HashSet<Integer>();
        for (int i = 1; i <= numberOfDigits; i++) {
            digits.add(i);
        }
        for (int i = 1; i <= numberOfDigits; i++) {
            digits.remove(x % 10);
            x /= 10;
        }
        if (digits.size() == 0) {
            return true;
        } else {
            return false;
        }
    }
}
